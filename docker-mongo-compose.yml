version: '2.2'
services:
  mongo-setup:
    container_name: mongo-setup
    image: mongo
    restart: on-failure
    volumes:
      - ./mongo/scripts:/scripts
    entrypoint: [ "/scripts/setup.sh" ]
    networks:
      - flask-app_appnet 
    depends_on:
      - mongo1
      - mongo2
      - mongo3
  
  mongo1:
    hostname: mongo1
    container_name: localmongo1
    image: mongo
    networks:
      - flask-app_appnet 
    expose:
      - 27017
    ports:
      - 27017:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--journal", "--dbpath", "/data/db", "--enableMajorityReadConcern", "false" ]
    volumes:
      - ./mongo/volumes/mongo/data1/db:/data/db 
      - ./mongo/volumes/mongo/data1/configdb:/data/configdb
  mongo2:
    hostname: mongo2
    container_name: localmongo2
    image: mongo
    networks:
      - flask-app_appnet 
    expose:
      - 27017
    ports:
      - 27018:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--journal", "--dbpath", "/data/db", "--enableMajorityReadConcern", "false" ]
    volumes:
      - ./mongo/volumes/mongo/data2/db:/data/db 
      - ./mongo/volumes/mongo/data2/configdb:/data/configdb
  mongo3:
    hostname: mongo3
    container_name: localmongo3
    image: mongo
    networks:
      - flask-app_appnet  
    expose:
      - 27017
    ports:
      - 27019:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--journal", "--dbpath", "/data/db", "--enableMajorityReadConcern", "false" ]
    volumes:
      - ./mongo/volumes/mongo/data3/db:/data/db
      - ./mongo/volumes/mongo/data3/configdb:/data/configdb
networks:
  flask-app_appnet:
    external: true